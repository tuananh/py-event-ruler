name: Build

on:
  # release:
  #   types: [created]
  push:
    tags:
      - '*'
  workflow_dispatch:

jobs:
  build_macos:
    # if: false
    name: MacOS ${{ matrix.os_version }} 3${{ matrix.python3_version }} ${{ matrix.arch_cibw_go[0] }}
    strategy:
      fail-fast: false
      matrix:
        os_version: [ 11, 12 ]
        python3_version: [ 10, 11 ]
        arch_cibw_go:
          - [ "x86_64", "amd64" ]
          - [ "arm64", "arm64" ]
    runs-on: macos-${{ matrix.os_version }}
    environment:
      name: pypi
      url: https://pypi.org/p/event_ruler
    steps:
      - uses: actions/checkout@v3

      - name: set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.20.x"

      - name: copy setup.py
        run: cp setup_ci.py setup.py

      - name: install gopy
        run: go install github.com/go-python/gopy@v0.4.7

      - name: install goimports
        run: go install golang.org/x/tools/cmd/goimports@latest

      - name: install python 3.${{ matrix.python3_version }}
        run: |
          brew install python@3.${{ matrix.python3_version }}
          ln -s /usr/local/opt/python@3.${{ matrix.python3_version }}/bin/python3.${{ matrix.python3_version }}  /usr/local/bin/python_for_build
          /usr/local/bin/python_for_build --version

      - name: install cibuildwheel and pybindgen
        run: /usr/local/bin/python_for_build -m pip install cibuildwheel==2.14.1 pybindgen

      - name: build wheels
        run: /usr/local/bin/python_for_build -m cibuildwheel --output-dir wheelhouse
        env:
          CGO_ENABLED: 1  # build fails for arm if unset
          CIBW_ARCHS: ${{ matrix.arch_cibw_go[0] }}
          PYTHON_BINARY_PATH: /usr/local/bin/python_for_build
          CIBW_BUILD: "cp3${{ matrix.python3_version }}-*"
          CIBW_ENVIRONMENT: >
            PATH=$PATH:/usr/local/go/bin
            GOARCH=${{ matrix.arch_cibw_go[1] }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: ./wheelhouse/*.whl

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: ./wheelhouse
          password: ${{ secrets.PYPI_API_TOKEN }}

  build_linux_x86_64:
    # if: false
    name: Linux 310,311 x86_64
    runs-on: ubuntu-20.04
    environment:
      name: pypi
      url: https://pypi.org/p/event_ruler

    steps:
      - uses: actions/checkout@v3

      - name: copy setup.py
        run: cp setup_ci.py setup.py

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.14.1
        env:
          CIBW_BUILD: "cp3*_x86_64"
          CIBW_SKIP: "cp36-* cp37-* cp38-* cp39-* *-musllinux_x86_64"
          CIBW_ARCHS: "native"
          CIBW_ENVIRONMENT: >
            PATH=$PATH:/usr/local/go/bin
          CIBW_BEFORE_ALL_LINUX: |
            curl -o go.tar.gz https://dl.google.com/go/go1.20.7.linux-amd64.tar.gz
            tar -C /usr/local -xzf go.tar.gz
            go install github.com/go-python/gopy@v0.4.7
            go install golang.org/x/tools/cmd/goimports@latest

      - name: Upload atifacts
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: ./wheelhouse/*.whl

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: ./wheelhouse
          password: ${{ secrets.PYPI_API_TOKEN }}

  build_linux_arm:
    # if: false
    name: Linux 310,311 armv7l
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/event_ruler

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: copy setup.py
        run: cp setup_ci.py setup.py

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build wheels via Docker
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./armv7l.Dockerfile
          push: false
          platforms: linux/armhf
          tags: armv7l:latest
          cache-from: type=gha
          cache-to: type=gha,mode=min
          load: true

      - name: Extract output
        run: |
          docker run -v /tmp/output:/host armv7l:latest bash -c "cp /export/* /host/"
          tar -zcvf /tmp/output.tar.gz /tmp/output

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: /tmp/output/*.whl

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: ./wheelhouse
          password: ${{ secrets.PYPI_API_TOKEN }}

  build_windows:
    if: false  # not working
    name: Windows 310,311 x86_64
    runs-on: windows-2019

    steps:
      - uses: actions/checkout@v3

      - name: copy setup.py
        run: cp setup_ci.py setup.py

      - name: set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.20.x"

      - name: install gopy
        run: go install github.com/go-python/gopy@v0.4.7

      - name: install goimports
        run: go install golang.org/x/tools/cmd/goimports@latest

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.14.1
        env:
          # CGO_ENABLED: 1
          CIBW_BUILD: "cp3*"
          CIBW_SKIP: "cp36-* cp37-* cp38-* cp39-*"
          CIBW_ARCHS: "native"
          CIBW_ENVIRONMENT: >
            GOARCH=amd64

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: ./wheelhouse/*.whl